{% set secret_domain = "ak://${VAULT_PREFIX}-cluster/SECRET_DOMAIN" -%}
{% set tunnel_id = "ak://${VAULT_PREFIX}-cluster/CLOUDFLARE_TUNNEL_ID" -%}
{% set cert_name = secret_domain|replace('.', '-') -%}
{% for namespace in [${NAMESPACES}] -%}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: {{ namespace }}
stringData:
  SECRET_DOMAIN: {{ secret_domain }}
  CLOUDFLARE_TUNNEL_ID: {{ tunnel_id }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-settings
  namespace: {{ namespace }}
data:
  VAULT_PREFIX: "${VAULT_PREFIX}"
  TIMEZONE: "${TIMEZONE}"
  GIT_REPO: "${GIT_REPO}"
  GIT_REPO_REF: "${GIT_REPO_REF}"
  CLUSTER_CIDR: "${CLUSTER_CIDR}"
  LAN_CIDR: "${LAN_CIDR}"
  SERVICE_CIDR: "${SERVICE_CIDR}"
  CLUSTER_API_ADDR: "${CLUSTER_API_ADDR}"
  CLOUDFLARE_GATEWAY_ADDR: "${CLOUDFLARE_GATEWAY_ADDR}"
  CLUSTER_GATEWAY_ADDR: "${CLUSTER_GATEWAY_ADDR}"
  CLUSTER_DNS_GATEWAY_ADDR: "${CLUSTER_DNS_GATEWAY_ADDR}"
{% endfor -%}
---
apiVersion: v1
kind: Secret
metadata:
  name: akeyless
  namespace: external-secrets
stringData:
  accessId: "ak://akeyless/ACCESS_ID"
  accessType: api_key
  accessTypeParam: "ak://akeyless/ACCESS_TYPE_PARAM"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ cert_name }}-production
  namespace: network
  annotations:
    cert-manager.io/common-name: "{{ secret_domain }}"
    cert-manager.io/alt-names: '*.{{ secret_domain }},{{ secret_domain }}'
    cert-manager.io/certificate-name: "{{ secret_domain }}"
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
  labels:
    controller.cert-manager.io/fao: "true"
type: kubernetes.io/tls
data:
  tls.key: "ak://${VAULT_PREFIX}/production-tls/tls.key"
  tls.crt: "ak://${VAULT_PREFIX}/production-tls/tls.crt"
