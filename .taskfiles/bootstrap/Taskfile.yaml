---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

tasks:

  talos:
    desc: Bootstrap the Talos cluster
    dir: '{{.TALHELPER_DIR}}'
    cmds:
      - '[ -f talsecret.sops.yaml ] || talhelper gensecret | sops --filename-override talos/talsecret.sops.yaml --encrypt /dev/stdin > talsecret.sops.yaml'
      - talhelper genconfig
      - talhelper gencommand apply --extra-flags="--insecure" | bash
      - until talhelper gencommand bootstrap | bash; do sleep 10; done
      - until talhelper gencommand kubeconfig --extra-flags="{{.ROOT_DIR}} --force" | bash; do sleep 10; done
    preconditions:
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.TALHELPER_DIR}}/talconfig.yaml
      - which talhelper sops

  apps:
    desc: Bootstrap apps into the Talos cluster
    cmds:
      - until kubectl wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done
      - for: { var: APPLY_NAMESPACES }
        cmd: kubectl create namespace {{base .ITEM}} --dry-run=client --output=yaml | kubectl apply --server-side --filename -
      - for: { var: APPLY_SECRETS }
        cmd: sops exec-file {{.ITEM}} "kubectl --namespace flux-system apply --server-side --filename {}"
      - kubectl --namespace flux-system apply --server-side --filename {{.KUBERNETES_DIR}}/flux/components/substitutions/cluster-settings.yaml
      - helmfile --file {{.KUBERNETES_DIR}}/bootstrap/apps/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    vars:
      APPLY_NAMESPACES:
        sh: ls -d {{.KUBERNETES_DIR}}/apps/*
      APPLY_SECRETS:
        sh: find {{.KUBERNETES_DIR}}/bootstrap/apps {{.KUBERNETES_DIR}}/flux -type f -name '*.sops.yaml'
    preconditions:
      - test -f {{.KUBECONFIG}}
      - test -f {{.KUBERNETES_DIR}}/bootstrap/apps/helmfile.yaml
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - which helmfile kubectl sops
