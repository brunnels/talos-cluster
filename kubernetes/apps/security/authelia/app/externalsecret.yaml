---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authelia-secret
spec:
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD: "{{ .GLAUTH_SEARCH_PASSWORD }}"
        AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET: "{{ .AUTHELIA_IDENTITY_PROVIDERS_OIDC_HMAC_SECRET }}"
        AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET: "{{ .AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET }}"
        AUTHELIA_SESSION_SECRET: "{{ .AUTHELIA_SESSION_SECRET }}"
        AUTHELIA_STORAGE_ENCRYPTION_KEY: "{{ .AUTHELIA_STORAGE_ENCRYPTION_KEY }}"
        SECRET_DOMAIN: "{{ .SECRET_DOMAIN }}"
        # Postgres connection
        AUTHELIA_STORAGE_POSTGRES_ADDRESS: '{{ index . "host" }}'
        AUTHELIA_STORAGE_POSTGRES_DATABASE: '{{ index . "dbname" }}'
        AUTHELIA_STORAGE_POSTGRES_USERNAME: '{{ index . "user" }}'
        AUTHELIA_STORAGE_POSTGRES_PASSWORD: '{{ index . "password" }}'
  dataFrom:
    - extract:
        key: /authelia
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: akeyless-secret-store
    - extract:
        key: /glauth
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: akeyless-secret-store
    - extract:
        key: /generic
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: akeyless-secret-store
    - extract:
        key: postgres-pguser-authelia
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: crunchy-pgo-secrets
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authelia-secret-files
spec:
  secretStoreRef:
    name: akeyless-secret-store
    kind: ClusterSecretStore
  target:
    name: *name
    template:
      engineVersion: v2
      data:
        oidc-client-vikunja: "{{ .VIKUNJA_OAUTH_CLIENT_SECRET_HASHED }}"
        oidc-client-grafana: "{{ .GRAFANA_OAUTH_CLIENT_SECRET_HASHED }}"
        oidc-client-lubelog: "{{ .LUBELOG_OAUTH_CLIENT_SECRET_HASHED }}"
        oidc-client-paperless: "{{ .PAPERLESS_OAUTH_CLIENT_SECRET_HASHED }}"
        oidc-client-tandoor: "{{ .TANDOOR_OAUTH_CLIENT_SECRET_HASHED }}"
        oidc-client-dashbrr: "{{ .DASHBRR_OAUTH_CLIENT_SECRET_HASHED }}"
  dataFrom:
    - extract:
        key: /authelia
    - extract:
        key: /vikunja
    - extract:
        key: /lubelog
    - extract:
        key: /grafana
    - extract:
        key: /paperless
    - extract:
        key: /tandoor
    - extract:
        key: /dashbrr
