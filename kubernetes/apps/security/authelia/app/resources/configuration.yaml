---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  ldap:
    address: "ldaps://${QNAP_HOSTNAME}:636"
    implementation: custom
    timeout: 5s
    base_dn: "${LDAP_BASE_DN}"
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=group
    groups_filter: (&(memberUid={username})(objectClass=*))
    group_search_mode: filter
    attributes:
      username: uid
      display_name: gecos
      mail: mail
      group_name: cn

log:
  level: "info"
  format: "text"
  file_path: ""
  keep_stdout: false

session:
  same_site: lax
  expiration: 1h
  inactivity: 5m
  remember_me: 1M
  cookies:
    - name: "${SECRET_DOMAIN}.session"
      domain: "${SECRET_DOMAIN}"
      authelia_url: "https://auth.${SECRET_DOMAIN}"
      default_redirection_url: "https://${SECRET_DOMAIN}"
  redis:
    database_index: 2
    host: authelia-dragonfly

storage:
  postgres:
    tls:
      skip_verify: true

notifier:
  disable_startup_check: true
  smtp:
    sender: "Authelia <admin@${SECRET_DOMAIN}>"

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks: ["${LAN_CIDR}", "${CLUSTER_CIDR}", "${SERVICE_CIDR}"]
    - name: cluster
      networks: ["${CLUSTER_CIDR}"]

  rules:
    # Allow free access from cluster network
    - domain: "*.${SECRET_DOMAIN}"
      networks:
        - "cluster"
      policy: bypass
    # 2FA if not on cluster network
    - domain: "*.${SECRET_DOMAIN}"
      policy: two_factor

totp:
  disable: false
  issuer: "Authelia (${SECRET_DOMAIN})"

webauthn:
  disable: false
  display_name: "Authelia (${SECRET_DOMAIN})"
  attestation_conveyance_preference: indirect
  selection_criteria:
    user_verification: preferred
  timeout: 60s

duo_api:
  disable: false

identity_providers:
  oidc:
    jwks:
      - key: |
          {{ secret "/app/secrets/OIDC_JWKS_KEY_PEM" | mindent 10 "|" | msquote }}
    claims_policies:
      default:
        id_token: ['groups', 'email', 'email_verified', 'alt_emails', 'preferred_username', 'name']
    cors:
      endpoints: ["authorization", "pushed-authorization-request", "token", "revocation", "introspection", "userinfo"]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - client_name: pgAdmin
        client_id: '{{ env "PGADMIN_OIDC_CLIENT_ID" }}'
        client_secret: '{{ secret "/app/secrets/PGADMIN_OIDC_CLIENT_SECRET" }}'
        pre_configured_consent_duration: 1y
        redirect_uris: ["https://pgadmin.${SECRET_DOMAIN}/oauth2/authorize"]
        scopes: ["openid", "profile", "email"]
        response_types: ["code"]

      - client_name: Weave GitOps
        client_id: '{{ env "WEAVE_OIDC_CLIENT_ID" }}'
        client_secret: '{{ secret "/app/secrets/WEAVE_OIDC_CLIENT_SECRET" }}'
        pre_configured_consent_duration: 1y
        redirect_uris: ["https://gitops.${SECRET_DOMAIN}/oauth2/callback"]
        claims_policy: "default"
