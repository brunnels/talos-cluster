---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cloudbeaver
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - kind: ConfigMap
      name: authelia-ingress-hv
  values:
    controllers:
      cloudbeaver:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
            envFrom: &envFrom
              - secretRef:
                  name: *app
          # we have to do this so the current container build can not run as root because
          # it has the ubuntu user 1000:1000 but the files are not owned by that user
          # so we just copy them into the cloudbeaver emptyDir and set the owner during init
          copy-files:
            image: &image
              repository: docker.io/dbeaver/cloudbeaver
              tag: 24.1.3@sha256:9da3571c0c808ae37181b8735c82e5e4761734339a4f551fe75b5493d727185d
            command:
              - "/bin/sh"
            args:
              - "-c"
              - |
                cd /opt/cloudbeaver \
                && cp -R conf drivers run-server.sh samples server web /cb/ \
                && chown 1000:1000 -R /cb/* \
                && ls -lah /cb/
        containers:
          app:
            image: *image
            env:
              CB_SERVER_NAME: *app
              CB_SERVER_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              CLOUDBEAVER_DB_DRIVER: "postgres-jdbc"
              CLOUDBEAVER_DB_URL: "jdbc:postgresql://postgres-rw.databases.svc.cluster.local:5432/{{ .Release.Name }}"
              CLOUDBEAVER_DB_BACKUP_ENABLED: "false"
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8978
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Development
          gethomepage.dev/name: CloudBeaver
          gethomepage.dev/icon: https://raw.githubusercontent.com/dbeaver/cloudbeaver/23.2.5/webapp/packages/core-app/public/favicon.svg
          gethomepage.dev/description: Cloud Database Manager
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: configMap
        name: *app
        advancedMounts:
          cloudbeaver:
            app:
              - subPath: initial-data-sources.conf
                path: /opt/cloudbeaver/conf/initial-data-sources.conf
                readOnly: true
              - subPath: cloudbeaver.conf
                path: /opt/cloudbeaver/conf/cloudbeaver.conf
                readOnly: true
              - subPath: initial-data.conf
                path: /opt/cloudbeaver/conf/initial-data.conf
                readOnly: true
      cloudbeaver:
        type: emptyDir
        advancedMounts:
          cloudbeaver:
            copy-files:
              - path: /cb
            app:
              - path: /opt/cloudbeaver
      workspace:
        existingClaim: *app
        globalMounts:
          - path: /opt/cloudbeaver/workspace
