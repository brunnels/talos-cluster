---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/pushsecret_v1alpha1.json
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: airvpn-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: airvpn
  data:
    - match:
        remoteRef:
          remoteKey: korg/airvpn
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: alertmanager-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: alertmanager
  data:
    - match:
        remoteRef:
          remoteKey: korg/alertmanager
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: authelia-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: authelia
  data:
    - match:
        remoteRef:
          remoteKey: korg/authelia
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cloudbeaver-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: cloudbeaver
  data:
    - match:
        remoteRef:
          remoteKey: korg/cloudbeaver
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: cloudflare-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: cloudflare
  data:
    - match:
        remoteRef:
          remoteKey: korg/cloudflare
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: coder-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: coder
  data:
    - match:
        remoteRef:
          remoteKey: korg/coder
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: gatus-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: gatus
  data:
    - match:
        remoteRef:
          remoteKey: korg/gatus
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: github-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: github
  data:
    - match:
        remoteRef:
          remoteKey: korg/github
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: grafana-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: grafana
  data:
    - match:
        remoteRef:
          remoteKey: korg/grafana
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: hass-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: hass
  data:
    - match:
        remoteRef:
          remoteKey: korg/hass
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: komga-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: komga
  data:
    - match:
        remoteRef:
          remoteKey: korg/komga
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: kubeapi-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: kubeapi
  data:
    - match:
        remoteRef:
          remoteKey: korg/kubeapi
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: lidarr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: lidarr
  data:
    - match:
        remoteRef:
          remoteKey: korg/lidarr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: open-webui-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: open-webui
  data:
    - match:
        remoteRef:
          remoteKey: korg/open-webui
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: opnsense-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: opnsense
  data:
    - match:
        remoteRef:
          remoteKey: korg/opnsense
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: overseerr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: overseerr
  data:
    - match:
        remoteRef:
          remoteKey: korg/overseerr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: pgadmin-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: pgadmin
  data:
    - match:
        remoteRef:
          remoteKey: korg/pgadmin
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: pgbackweb-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: pgbackweb
  data:
    - match:
        remoteRef:
          remoteKey: korg/pgbackweb
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: plex-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: plex
  data:
    - match:
        remoteRef:
          remoteKey: korg/plex
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: postgres-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: postgres
  data:
    - match:
        remoteRef:
          remoteKey: korg/postgres
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: privadovpn-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: privadovpn
  data:
    - match:
        remoteRef:
          remoteKey: korg/privadovpn
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: prowlarr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: prowlarr
  data:
    - match:
        remoteRef:
          remoteKey: korg/prowlarr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: proxmox-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: proxmox
  data:
    - match:
        remoteRef:
          remoteKey: korg/proxmox
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: pushover-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: pushover
  data:
    - match:
        remoteRef:
          remoteKey: korg/pushover
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: qnap-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: qnap
  data:
    - match:
        remoteRef:
          remoteKey: korg/qnap
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: qnap-backup-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: qnap-backup
  data:
    - match:
        remoteRef:
          remoteKey: korg/qnap-backup
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: radarr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: radarr
  data:
    - match:
        remoteRef:
          remoteKey: korg/radarr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: readarr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: readarr
  data:
    - match:
        remoteRef:
          remoteKey: korg/readarr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: rook-ceph-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: rook-ceph
  data:
    - match:
        remoteRef:
          remoteKey: korg/rook-ceph
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: sabnzbd-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: sabnzbd
  data:
    - match:
        remoteRef:
          remoteKey: korg/sabnzbd
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: semaphore-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: semaphore
  data:
    - match:
        remoteRef:
          remoteKey: korg/semaphore
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: smtp2go-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: smtp2go
  data:
    - match:
        remoteRef:
          remoteKey: korg/smtp2go
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: sonarr-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: sonarr
  data:
    - match:
        remoteRef:
          remoteKey: korg/sonarr
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: tautulli-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: tautulli
  data:
    - match:
        remoteRef:
          remoteKey: korg/tautulli
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: volsync-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: volsync
  data:
    - match:
        remoteRef:
          remoteKey: korg/volsync
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: weave-gitops-akeyless-push-secret
spec:
  refreshInterval: 1h
  updatePolicy: Replace
  deletionPolicy: Delete
  secretStoreRefs:
    - name: akeyless-secret-store
      kind: ClusterSecretStore
  selector:
    secret:
      name: weave-gitops
  data:
    - match:
        remoteRef:
          remoteKey: korg/weave-gitops
