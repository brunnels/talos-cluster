---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: longhorn
spec:
  interval: 30m
  chart:
    spec:
      chart: longhorn
      version: 1.6.2
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  install:
    replace: true
    remediation:
      retries: 3
  upgrade:
    force: true
    preserveValues: true
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultSettings:
      createDefaultDiskLabeledNodes: true
      defaultDataLocality: true
      replicaAutoBalance: true
      storageMinimalAvailablePercentage: 1
      storageReservedPercentageForDefaultDisk: 10
      defaultLonghornStaticStorageClass: longhorn
      nodeDownPodDeletionPolicy: delete-both-statefulset-and-deployment-pod
      concurrentAutomaticEngineUpgradePerNodeLimit: 3
      orphanAutoDeletion: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Storage
        gethomepage.dev/icon: longhorn
        gethomepage.dev/name: Longhorn
        gethomepage.dev/pod-selector: app.kubernetes.io/name=longhorn
        nginx.ingress.kubernetes.io/auth-method: GET
        nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
        nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}
        nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Method $request_method;
      host: longhorn.${SECRET_DOMAIN}
      tls: false
    metrics:
      serviceMonitor:
        enabled: true
