---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - kind: ConfigMap
      name: authelia-ingress-hv
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.3@sha256:86c645db93affcbf01cc2bce2560082bfde791009e1506dba68269b9c50bc341
            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.downloads,
                sabnzbd.downloads.svc,
                sabnzbd.downloads.svc.cluster,
                sabnzbd.downloads.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 300m
                memory: 1Gi
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: SABnzbd
          gethomepage.dev/icon: sabnzbd
          gethomepage.dev/widget.type: sabnzbd
          gethomepage.dev/widget.url: http://sabnzbd.downloads:8080
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_SABNZBD_TOKEN}}`}}"
          nginx.ingress.kubernetes.io/configuration-snippet: ${THEME_PARK_SNIPPET}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: sabnzbd-config
      tmp:
        type: emptyDir
      incomplete:
        type: emptyDir
      applications:
        existingClaim: cifs-applications
        globalMounts:
          - path: /media/applications
      downloads:
        existingClaim: cifs-downloads
        globalMounts:
          - path: /downloads
            subPath: sabnzbd
      games:
        existingClaim: cifs-games
        globalMounts:
          - path: /media/games
      misc:
        existingClaim: cifs-misc
        globalMounts:
          - path: /media/misc
