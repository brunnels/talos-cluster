---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
spec:
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: "postgres"
  postgresVersion: 16
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replicas 3
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/data: postgres
  users:
    # Superuser
    - name: &db postgres
      databases: [*db]
      options: "SUPERUSER"
      password: &pw
        type: AlphaNumeric

    # Applications
    - name: &db atuin
      databases: [*db]
      password: *pw

    - name: &db authelia
      databases: [*db]
      password: *pw

    - name: &db coder
      databases: [*db]
      password: *pw

    - name: &db grafana
      databases: [*db]
      password: *pw

    - name: &db hass
      databases: [*db]
      password: *pw

    - name: lidarr
      databases: [lidarr_main, lidarr_log]
      password: *pw

    - name: &db pgadmin
      databases: [*db]
      password: *pw

    - name: &db piped
      databases: [*db]
      password: *pw

    - name: &db pgbackweb
      databases: [*db]
      password: *pw

    - name: prowlarr
      databases: [prowlarr_main]
      password: *pw

    - name: radarr
      databases: [radarr_main]
      password: *pw

    - name: readarr
      databases: [readarr_main, readarr_cache, readarr_log]
      password: *pw

    - name: &db romm
      databases: [*db]
      password: *pw

    - name: sonarr
      databases: [sonarr_main]
      password: *pw

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres
      global: &backupFlag
        # Global
        compress-type: "bz2"
        compress-level: "9"
        backup-standby: "y"
        # QNAP
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /crunchy-pgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        repo1-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1 # QNAP
          s3: &qnap
            bucket: "crunchy-postgres"
            endpoint: "${SECRET_QNAP_HOSTNAME}:8010"
            region: "us-east-1"
          schedules:
            full: "30 1 * * 0" # Sunday at 01:30
            differential: "30 1 * * 1-6" # Mon-Sat at 01:30
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: "repo1"
        s3: *qnap
  proxy:
    pgBouncer:
      service:
        metadata:
          annotations:
            external-dns.alpha.kubernetes.io/hostname: postgres.${SECRET_DOMAIN}
            lbipam.cilium.io/ips: ${SVC_POSTGRES_ADDR}
        type: LoadBalancer
      port: 5432
      replicas: *replicas
      config:
        global:
          # Grafana requires session
          # Ref: https://github.com/grafana/grafana/issues/74260
          pool_mode: session
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
