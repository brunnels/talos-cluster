---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app automatisch
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  valuesFrom:
    - kind: ConfigMap
      name: authelia-ingress-hv
  values:
    controllers:
      automatisch:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
            envFrom: &envFrom
              - secretRef:
                  name: *app
        containers:
          app:
            image: &image
              repository: ghcr.io/automatisch/automatisch
              tag: 0.13.1@sha256:ca70a4005ea253bd31b9c51ba041364ba56264a157c2fd72b27550a91dea336f
            env: &env
              PORT: 3000
              HOST:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              LOG_LEVEL: info
              APP_ENV: production
              PROTOCOL: http
              DISABLE_SEED_USER: true
#              REDIS_HOST: redis.databases.svc.cluster.local
              REDIS_SENTINEL_HOST: redis.databases.svc.cluster.local
              REDIS_NAME: redis-master
              REDIS_ROLE: master
              TELEMETRY_ENABLED: false
              ENABLE_BULLMQ_DASHBOARD: false
              SMTP_HOST: mail.smtp2go.com
              SMTP_PORT: 2525
              SMTP_SECURE: true
              FROM_EMAIL: "Automatisch <automatisch@${SECRET_DOMAIN}>"
            envFrom: *envFrom
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources: &resources
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          worker:
            image: *image
            env:
              <<: *env
              WORKER: true
            envFrom: *envFrom
            securityContext: *securityContext
            resources: *resources
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: 3000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Development
          gethomepage.dev/name: automatisch
          gethomepage.dev/icon: https://raw.githubusercontent.com/brunnels/assets/main/homepage/icons/automatisch.webp
          gethomepage.dev/description: Workflow Automation
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      logs:
        type: emptyDir
        sizeLimit: 300Mi
        globalMounts:
          - path: /automatisch/packages/backend/logs
      tmp:
        type: emptyDir
        sizeLimit: 100Mi
      node-home:
        type: emptyDir
        sizeLimit: 200Mi
        globalMounts:
          - path: /home/node
      storage:
        existingClaim: *app
        globalMounts:
          - path: /automatisch/storage
