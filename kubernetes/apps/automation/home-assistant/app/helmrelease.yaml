---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          add-default-configuration:
            image:
              repository: docker.io/library/busybox
              tag: 1.37.0@sha256:a5d0ce49aa801d475da48f8cb163c354ab95cab073cd3c138bd458fc8257fbf1
            command:
              - "/bin/sh"
            args:
              - "-c"
              - |
                [ ! -f "/config/configuration.yaml" ] \
                && ( cp /etc/default-configuration.yaml /config/configuration.yaml \
                     && echo "[]" > /config/automations.yaml \
                    && touch /config/scenes.yaml /config/scripts.yaml /config/secrets.yaml ) \
                || echo "Nothing to do, Configuration file already present."
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.1.4@sha256:6389f9593b4acd80c74322f56c9229fae631e752a3bf49839be12442a153e0dc
            args: [
              "--log-file", "/config/logs/home-assistant.log"
            ]
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
          codeserver:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.96.4@sha256:f93810f7f6636b3af3b1a750faf612349cddb89fbb6d28d69123a214fc75ee9e
            env:
              TZ: "${TIMEZONE}"
              HASS_SERVER: "http://localhost:8123"
            args: [
              "--auth", "none",
              "--disable-telemetry",
              "--disable-update-check",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                cpu: 500m
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        nameOverride: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_HOME_ASSISTANT_ADDR}
        ports:
          http:
            port: 8123
      codeserver:
        controller: *app
        type: ClusterIP
        ports:
          http:
            enabled: true
            port: 12321
    ingress:
      hass:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Automation
          gethomepage.dev/icon: home-assistant
          gethomepage.dev/name: Home Assistant
          gethomepage.dev/pod-selector: app.kubernetes.io/name=home-assistant
          nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For, X-Real-IP, X-Frame-Options, X-Content-Type-Options, X-Forwarded-Proto"
          nginx.org/websocket-services: home-assistant-app
        hosts:
          - host: "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Automation
          gethomepage.dev/icon: vscode
          gethomepage.dev/name: Home Assistant Code
          gethomepage.dev/pod-selector: app.kubernetes.io/name=home-assistant
        hosts:
          - host: "hass-code.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: codeserver
                  port: http
    configMaps:
      dockerenv:
        data:
          dockerenv: ""
      haas-code-gatus-ep:
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            ---
            endpoints:
              - name: "haas-code"
                group: guarded
                url: 1.1.1.1
                interval: 1m
                ui:
                  hide-hostname: true
                  hide-url: true
                dns:
                  query-name: "haas-code.kraven.org"
                  query-type: A
                conditions:
                  - "len([BODY]) == 0"
                alerts:
                  - type: pushover
              - name: "haas-code"
                group: internal
                url: "https://haas-code.kraven.org/"
                interval: 1m
                conditions:
                  - "[STATUS] == 200"
                alerts:
                  - type: pushover
    persistence:
      default-configuraton:
        type: configMap
        name: haas-default-configuration
        globalMounts:
          - path: /etc/default-configuration.yaml
            subPath: default-configuration.yaml
            readOnly: true
      config:
        existingClaim: *app
        globalMounts:
          - path: /config
      secrets:
        type: secret
        name: *app
        advancedMounts:
          home-assistant:
            app:
              - path: /config/secrets.yaml
                subPath: secrets.yaml
                readOnly: true
      dockerenv:
        type: configMap
        name: home-assistant-dockerenv
        advancedMounts:
          home-assistant:
            app:
              - path: /.dockerenv
                subPath: dockerenv
      logs:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /config/logs
      tts:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /config/tts
      tmp:
        type: emptyDir
        advancedMounts:
          home-assistant:
            app:
              - path: /tmp
                subPath: hass-tmp
            codeserverr:
              - path: /tmp
                subPath: codeserver-tmp
