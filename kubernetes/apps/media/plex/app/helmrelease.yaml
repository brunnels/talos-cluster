---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.3.8555-fef15d30c@sha256:82353ee29f0ba3e782aad43bb2be7c1e04b071b9fc83d6c551ef853793f48ab4
            env:
              TZ: "${TIMEZONE}"
              ALLOWED_NETWORKS: "${LAN_CIDR},${CLUSTER_CIDR},${SERVICE_CIDR}"
              PLEX_ADVERTISE_URL: "http://${SVC_PLEX_ADDR}:32400,https://plex.${SECRET_DOMAIN}"
              PLEX_PREFERENCE_1: "AllowMediaDeletion=0"
              PLEX_PREFERENCE_2: "EnableIPv6=0"
              PLEX_PREFERENCE_3: "FriendlyName=Runnels"
              PLEX_PREFERENCE_4: "LanNetworksBandwidth=${LAN_CIDR}"
              NVIDIA_VISIBLE_DEVICES: "all"
              NVIDIA_DRIVER_CAPABILITIES: "all"
              HARDWARE_DEVICE_PATH: "/dev/nvidia0"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 512Mi
                nvidia.com/gpu: 1
              limits:
                nvidia.com/gpu: 1
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      runtimeClassName: nvidia
      nodeSelector:
        nvidia.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Video
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: ${THEME_PARK_SNIPPET}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: plex-config
      cache:
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: "/config/Library/Application Support/Plex Media Server/Cache"
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      movies:
        existingClaim: cifs-movies
        globalMounts:
          - path: /media/movies
      music:
        existingClaim: cifs-music
        globalMounts:
          - path: /media/music
      pictures:
        existingClaim: cifs-pictures
        globalMounts:
          - path: /media/pictures
      tv:
        existingClaim: cifs-tv
        globalMounts:
          - path: /media/tv
      videos:
        existingClaim: cifs-videos
        globalMounts:
          - path: /media/videos
