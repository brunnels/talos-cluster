---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugins-gpu
      namespace: system
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      plex:
        replicas: 0
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.4.9463-630c9f557@sha256:1d7589538a85a48ed3c14703b33ae8bacda7ca7db5307c68e8bc1b8ae6e888de
            env:
              TZ: "${TIMEZONE}"
              PLEX_ADVERTISE_URL: "https://plex.${SECRET_DOMAIN}:443,http://${SVC_PLEX_ADDR}:32400,https://plex-local.${SECRET_DOMAIN}:443"
              PLEX_NO_AUTH_NETWORKS: "${LAN_CIDR},${CLUSTER_CIDR},${SERVICE_CIDR}"
              PLEX_PREFERENCE_1: "AllowMediaDeletion=0"
              PLEX_PREFERENCE_2: "EnableIPv6=0"
              PLEX_PREFERENCE_3: "FriendlyName=Runnels"
              PLEX_PREFERENCE_4: "LanNetworksBandwidth=${LAN_CIDR}"
            envFrom:
              - secretRef:
                  name: *app
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: &port 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Media
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: ${THEME_PARK_SNIPPET}
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.media.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        hosts:
          - host: "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      local:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: ${THEME_PARK_SNIPPET}
        hosts:
          - host: "plex-local.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    configMaps:
      plex-gatus-ep:
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            endpoints:
              - name: "plex"
                group: external
                url: "https://plex.${SECRET_DOMAIN}/"
                interval: 1m
                client:
                  dns-resolver: tcp://1.1.1.1:53
                conditions:
                  - "[STATUS] == 200"
                alerts:
                  - type: pushover
              - name: "plex-local"
                group: internal
                url: "https://plex-local.${SECRET_DOMAIN}/"
                interval: 1m
                conditions:
                  - "[STATUS] == 200"
                alerts:
                  - type: pushover
    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      cache:
        storageClass: openebs-hostpath
        accessMode: ReadWriteOnce
        size: 10Gi
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      movies:
        existingClaim: cifs-movies
        globalMounts:
          - path: /media/movies
      music:
        existingClaim: cifs-music
        globalMounts:
          - path: /media/music
      pictures:
        existingClaim: cifs-pictures
        globalMounts:
          - path: /media/pictures
      tv:
        existingClaim: cifs-tv
        globalMounts:
          - path: /media/tv
      videos:
        existingClaim: cifs-videos
        globalMounts:
          - path: /media/videos
