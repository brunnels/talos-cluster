---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app security-pgo-cluster
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
      hrpatch.flux.home.arpa/disabled: "true"
  dependsOn:
    - name: external-secrets-stores
      namespace: external-secrets
    - name: crunchy-postgres-operator
      namespace: database
    - name: rook-ceph-cluster
      namespace: storage
  healthCheckExprs:
    - apiVersion: external-secrets.io/v1
      kind: ExternalSecret
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
    - apiVersion: postgres-operator.crunchydata.com/v1beta1
      kind: PostgresCluster
      inProgress: status.instances.filter(e, e.name == 'pgo-cluster').all(e, e.readyReplicas < e.replicas)
      current: status.instances.filter(e, e.name == 'pgo-cluster').all(e, e.readyReplicas == e.replicas)
  interval: 1h
  path: ./kubernetes/base/database/pgo-cluster
#
# If you are adding a new cluster to a namespace make sure to update authelia configuration
# identity_providers.oidc.clients pgAdmin client redirect_uris to include the new authorize endpoint
# e.g. "https://<NAMESPACE>-pgadmin.${SECRET_DOMAIN}/oauth2/authorize"
#
# You may occasionally have one replica that refuses to start if you're modifying the cluster or testing
# If this happens, delete the pvc and then the statefulset associated with stuck replica pod
# The replica statefulset and pvc will be recreated automatically
#
# Remove this patch after the cluster has been created successfully.
#  patches:
#    - patch: |-
#        - op: remove
#          path: /spec/dataSource
#      target:
#        group: postgres-operator.crunchydata.com
#        kind: PostgresCluster
  postBuild:
    substitute:
      # USERS should be a valid JSON array representing PostgresCluster spec.users
      USERS: |
        [
          {"name": "postgres", "databases": ["postgres"], "password": {"type": "AlphaNumeric"}, "options": "SUPERUSER"},
          {"name": "authelia", "databases": ["authelia"], "password": {"type": "AlphaNumeric"}}
        ]
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: true
